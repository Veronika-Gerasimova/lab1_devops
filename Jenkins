pipeline {
    agent any

    environment {
        JAVA_TOOL_OPTIONS = "-Dfile.encoding=UTF-8"
        PYTHON_PATH = 'C:\\Users\\geras\\AppData\\Local\\Programs\\Python\\Python312\\python.exe'
        VENV_DIR = 'venv'
        APP_NAME = 'lab1_devops'
        APP_PORT = '5000'
    }

    stages {
        stage('Checkout') {
            steps {
                echo 'Получение кода из репозитория...'
                checkout([$class: 'GitSCM',
                          branches: [[name: '*/main']],
                          userRemoteConfigs: [[
                              url: 'https://github.com/Veronika-Gerasimova/lab1_devops',
                              credentialsId: 'github-token2'
                          ]]])
                script {
                    echo "Current branch: ${env.BRANCH_NAME}"
                    echo "Git commit: ${env.GIT_COMMIT}"
                }
            }
        }

        stage('Setup Virtual Environment') {
            steps {
                echo 'Создание виртуального окружения...'
                bat "\"${env.PYTHON_PATH}\" -m venv %VENV_DIR%"
                bat ".\\%VENV_DIR%\\Scripts\\python.exe -m pip install --upgrade pip"
                bat ".\\%VENV_DIR%\\Scripts\\pip.exe install -r requirements.txt"
            }
        }

        stage('Run Tests') {
            steps {
                echo 'Запуск тестов...'
                bat ".\\%VENV_DIR%\\Scripts\\pytest.exe -q --disable-warnings --maxfail=1"
            }
            post {
                always {
                    echo 'Тесты завершены'
                }
            }
        }

        stage('Deploy to Production') {
            when {
                anyOf {
                    branch 'main'
                    branch 'origin/main'
                    allOf {
                        not { branch 'dev' }
                        not { branch 'feature' }
                    }
                }
            }
            steps {
                echo 'Деплой в production окружение...'
                bat '''
                    echo Остановка предыдущих процессов Python...
                    taskkill /F /IM python.exe 2>nul || echo Нет запущенных процессов Python
                    
                    echo Запуск приложения на порту %APP_PORT%...
                    start /B .\\%VENV_DIR%\\Scripts\\python.exe app.py
                    
                    echo Ожидание запуска приложения...
                    timeout /t 5 /nobreak >nul
                    
                    echo Проверка работоспособности приложения...
                    for /L %%i in (1,1,10) do (
                        curl -s http://localhost:%APP_PORT%/health >nul 2>&1
                        if !errorlevel! equ 0 (
                            echo Приложение успешно запущено и отвечает на запросы!
                            goto :success
                        )
                        echo Попытка %%i: приложение еще запускается...
                        timeout /t 2 /nobreak >nul
                    )
                    echo ОШИБКА: Приложение не отвечает после 10 попыток!
                    exit /b 1
                    :success
                '''
                echo 'Production deployment completed successfully!'
            }
        }
    }

    post {
        success {
            echo 'CI/CD pipeline выполнен успешно!'
            withCredentials([string(credentialsId: 'github-token2', variable: 'TOKEN')]) {
                bat """
                    curl -H "Authorization: token %TOKEN%" ^
                         -H "Accept: application/vnd.github+json" ^
                         -X POST ^
                         https://api.github.com/repos/Veronika-Gerasimova/lab1_devops/statuses/%GIT_COMMIT% ^
                         -d "{\\"state\\":\\"success\\",\\"context\\":\\"Jenkins\\",\\"description\\":\\"Build succeeded\\"}"
                """
            }
        }
        failure {
            echo 'Pipeline завершился с ошибкой! Проверьте логи.'
            withCredentials([string(credentialsId: 'github-token2', variable: 'TOKEN')]) {
                bat """
                    curl -H "Authorization: token %TOKEN%" ^
                         -H "Accept: application/vnd.github+json" ^
                         -X POST ^
                         https://api.github.com/repos/Veronika-Gerasimova/lab1_devops/statuses/%GIT_COMMIT% ^
                         -d "{\\"state\\":\\"failure\\",\\"context\\":\\"Jenkins\\",\\"description\\":\\"Build failed\\"}"
                """
            }
        }
    }
}
