pipeline {
    agent any

    environment {
        PYTHON_PATH = 'C:\\Users\\geras\\AppData\\Local\\Programs\\Python\\Python312\\python.exe'
        VENV_DIR = "venv"
    }

    options {
        timestamps()
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Quality Test') {
            steps {
                echo "Running flake8..."
                bat """
                   "%PYTHON_PATH%" -m venv %VENV_DIR%
                   call %VENV_DIR%\\Scripts\\activate && "%PYTHON_PATH%" -m pip install --upgrade pip
                   call %VENV_DIR%\\Scripts\\activate && "%PYTHON_PATH%" -m pip install flake8
                   call %VENV_DIR%\\Scripts\\activate && "%PYTHON_PATH%" -m flake8 app.py test_app.py || exit 0
                """
            }
        }

        stage('Unit Test') {
            steps {
                echo "Running pytest..."
                bat """
                   call %VENV_DIR%\\Scripts\\activate
                   "%PYTHON_PATH%" -m pip install flask pytest
                   if not exist reports mkdir reports
                   "%PYTHON_PATH%" -m pytest --junitxml=reports\\junit.xml
                """
            }
            post {
                always {
                    junit 'reports/junit.xml'
                }
            }
        }

        stage('Rebuild / Deploy') {
            steps {
                echo "Deploying Flask app..."
                bat """
                call venv\\Scripts\\activate
                REM Устанавливаем зависимости
                pip install -r requirements.txt
                REM Убиваем старый процесс Flask (если есть)
                for /f "tokens=5" %%a in ('netstat -ano ^| findstr :5000') do taskkill /F /PID %%a
                REM Запускаем Flask в фоне на 0.0.0.0:5000
                start "" /B cmd /c "call venv\\Scripts\\activate && python app.py"
                REM Ждём 10 секунд, чтобы сервер успел подняться
                timeout /T 10 /NOBREAK >nul
                """
            }
        }
        
        stage('Acceptance Tests') {
            steps {
                echo "Checking if Flask app is up..."
                bat """
                REM Используем локальный IP ноутбука, замените на свой
                set HOST_IP=192.168.0.106
                curl http://%HOST_IP%:5000/ || exit 1
                """
            }
        }


    post {
        success {
            echo "✅ Pipeline finished SUCCESS"
        }
        failure {
            echo "❌ Pipeline FAILED"
        }
    }
}
