pipeline {
    agent any

    environment {
        PYTHON = 'C:/Users/geras/AppData/Local/Programs/Python/Python312/python.exe'
        APP_DIR = 'C:/devops'
        FLASK_PORT = '5000'
        PID_FILE = "${APP_DIR}\\flask.pid"
    }

    stages {
        stage('Checkout SCM') {
            steps {
                echo 'Cloning repository...'
                git branch: 'main', url: 'https://github.com/Veronika-Gerasimova/lab1_devops.git', credentialsId: 'github-token'
            }
        }

        stage('Install dependencies') {
            steps {
                echo 'Installing Python dependencies...'
                bat "\"${PYTHON}\" -m pip install --upgrade pip"
                bat "\"${PYTHON}\" -m pip install -r ${APP_DIR}\\requirements.txt"
            }
        }

        stage('Run tests') {
            steps {
                echo 'Running pytest...'
                bat "\"${PYTHON}\" -m pytest -v ${APP_DIR}"
            }
        }

        stage('Stop old Flask server') {
            steps {
                echo 'Stopping previous Flask server if exists...'
                bat """
                if exist "${PID_FILE}" (
                    for /F %%i in (${PID_FILE}) do (
                        tasklist /FI "PID eq %%i" | find "%%i" >nul && taskkill /PID %%i /F || echo Process %%i not running, skipping
                    )
                    del "${PID_FILE}"
                )
                """
            }
        }

        stage('Deploy Flask App') {
            steps {
                echo 'Deploying Flask server in background...'
                bat """
                cd ${APP_DIR}
                start /B "" ${PYTHON} -m flask run --host=0.0.0.0 --port=${FLASK_PORT} > flask.log 2>&1
                """
            }
        }
    }

    post {
        always {
            echo 'Pipeline finished'
        }
    }
}
