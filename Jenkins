pipeline {
    agent any

    environment {
        PYTHON_PATH = 'C:\\Users\\geras\\AppData\\Local\\Programs\\Python\\Python312\\python.exe'
        VENV_DIR = 'venv'
        APP_NAME = 'lab1_devops'
        APP_PORT = '5000'
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Install dependencies') {
            steps {
                bat "\"${env.PYTHON_PATH}\" -m venv %VENV_DIR%"
                bat ".\\%VENV_DIR%\\Scripts\\python.exe -m pip install --upgrade pip"
                bat ".\\%VENV_DIR%\\Scripts\\pip.exe install -r requirements.txt"
            }
        }

        stage('Run tests') {
            steps {
                bat ".\\%VENV_DIR%\\Scripts\\pytest.exe -q --disable-warnings --maxfail=1"
            }
        }

        stage('Build Docker image') {
            when {
                expression { 
                    return env.BRANCH_NAME == 'main' || env.GIT_BRANCH == 'origin/main'
                }
            }
            steps {
                echo "Building Docker image using Windows container..."
                bat "docker build -f Dockerfile.windows -t %APP_NAME% ."
            }
        }

        stage('Deploy') {
            when {
                expression { 
                    return env.BRANCH_NAME == 'main' || env.GIT_BRANCH == 'origin/main'
                }
            }
            steps {
                echo 'Starting deployment...'
                bat "docker stop %APP_NAME% || exit 0"
                bat "docker rm %APP_NAME% || exit 0"
                bat "docker run -d -p %APP_PORT%:5000 --name %APP_NAME% %APP_NAME%"
            }
        }
    }

    post {
        success {
            echo 'CI/CD pipeline finished successfully!'
        }
        failure {
            echo 'Pipeline failed. Check logs!'
        }
    }
}
