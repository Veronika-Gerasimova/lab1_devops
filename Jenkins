pipeline {
    agent any

    environment {
        PYTHON = 'C:/Users/geras/AppData/Local/Programs/Python/Python312/python.exe'
        APP_DIR = 'C:/devops'
        FLASK_LOG = 'C:/devops/flask.log'
        FLASK_PID = 'C:/devops/flask.pid'
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: "${env.BRANCH_NAME}", url: 'https://github.com/Veronika-Gerasimova/lab1_devops.git', credentialsId: 'github-token'
            }
        }

        stage('Install dependencies') {
            steps {
                bat "\"${env.PYTHON}\" -m pip install --upgrade pip"
                bat "\"${env.PYTHON}\" -m pip install -r ${env.APP_DIR}\\requirements.txt"
            }
        }

        stage('Run tests') {
            steps {
                bat "\"${env.PYTHON}\" -m pytest -v ${env.APP_DIR}"
            }
        }

        stage('Deploy Flask App') {
            when {
                branch 'main'
            }
            steps {
                echo 'Stopping previous Flask server if exists...'
                script {
                    if (fileExists(env.FLASK_PID)) {
                        bat """
                        for /F %i in (${env.FLASK_PID}) do (
                            tasklist /FI "PID eq %i" | find "%i" >nul && taskkill /PID %i /F || echo Process %i not running
                        )
                        del ${env.FLASK_PID}
                        """
                    }
                }

                echo 'Starting Flask server in background...'
                powershell """
                Start-Process -FilePath '${env.PYTHON}' -ArgumentList '-m flask run --host=0.0.0.0 --port=5000' -WorkingDirectory '${env.APP_DIR}' -RedirectStandardOutput '${env.FLASK_LOG}' -RedirectStandardError '${env.FLASK_LOG}' -WindowStyle Hidden -PassThru | ForEach-Object { $_.Id > '${env.FLASK_PID}' }
                """
            }
        }
    }

    post {
        always {
            echo "Pipeline finished for branch ${env.BRANCH_NAME}"
        }
    }
}
