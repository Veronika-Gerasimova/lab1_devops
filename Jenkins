pipeline {
    agent any

    environment {
        PYTHON_PATH = 'C:\\Users\\geras\\AppData\\Local\\Programs\\Python\\Python312\\python.exe'
        PROJECT_DIR = 'C:\\devops'
        FLASK_APP = 'app.py'  // укажи свой основной файл Flask
        FLASK_PORT = '5000'
        FLASK_HOST = '0.0.0.0'
        FLASK_PID = "${PROJECT_DIR}\\flask.pid"
    }

    stages {
        stage('Checkout SCM') {
            steps {
                echo 'Cloning repository...'
                git url: 'https://github.com/Veronika-Gerasimova/lab1_devops.git', branch: 'main', credentialsId: 'github-token'
            }
        }

        stage('Install dependencies') {
            steps {
                echo 'Installing Python dependencies...'
                bat "\"${PYTHON_PATH}\" -m pip install --upgrade pip"
                bat "\"${PYTHON_PATH}\" -m pip install -r ${PROJECT_DIR}\\requirements.txt"
            }
        }

        stage('Run tests') {
            steps {
                echo 'Running pytest...'
                bat "\"${PYTHON_PATH}\" -m pytest -v ${PROJECT_DIR}"
            }
        }

        stage('Stop old Flask server') {
            steps {
                echo 'Stopping previous Flask server if exists...'
                script {
                    bat """
                    if exist "${FLASK_PID}" (
                        for /F %i in (${FLASK_PID}) do (
                            tasklist /FI "PID eq %i" | find "%i" 1>nul && taskkill /PID %i /F || echo Process %i not running, skipping
                        )
                        del "${FLASK_PID}"
                    )
                    """
                }
            }
        }

        stage('Deploy Flask App') {
            steps {
                echo 'Deploying Flask server in background...'
                script {
                    bat """
                    cd ${PROJECT_DIR}
                    start /B "" ${PYTHON_PATH} -m flask run --host=${FLASK_HOST} --port=${FLASK_PORT} > flask.log 2>&1
                    echo %ERRORLEVEL%
                    """
                }
            }
        }
    }

    post {
        always {
            echo 'Pipeline finished'
        }
    }
}
