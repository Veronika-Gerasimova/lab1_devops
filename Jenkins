pipeline {
    agent any

    environment {
        PYTHON = 'C:/Users/geras/AppData/Local/Programs/Python/Python312/python.exe'
        PROJECT_DIR = 'C:/devops'
        PID_FILE = "${PROJECT_DIR}/flask.pid"
        NGROK_PATH = 'C:/devops/ngrok.exe' // путь к ngrok
    }

    options {
        skipDefaultCheckout()
    }

    stages {

        stage('Checkout SCM') {
            steps {
                echo 'Cloning repository...'
                git branch: 'main',
                    url: 'https://github.com/Veronika-Gerasimova/lab1_devops.git',
                    credentialsId: 'github-token'
            }
        }

        stage('Install dependencies') {
            steps {
                echo 'Installing Python dependencies...'
                bat "\"${env.PYTHON}\" -m pip install --upgrade pip"
                bat "\"${env.PYTHON}\" -m pip install -r ${PROJECT_DIR}/requirements.txt"
            }
        }

        stage('Run tests') {
            steps {
                echo 'Running pytest...'
                bat "\"${env.PYTHON}\" -m pytest -v ${PROJECT_DIR}"
            }
        }

        stage('Stop old server') {
            steps {
                echo 'Stopping previous Flask server if exists...'
                bat """
                if exist ${PID_FILE} (
                    for /F %%i in (${PID_FILE}) do taskkill /PID %%i /F
                    del ${PID_FILE}
                )
                """
            }
        }

        stage('Deploy Flask via ngrok') {
            steps {
                echo 'Starting Flask server with ngrok...'
                bat """
                cd ${PROJECT_DIR}
                REM Запускаем Flask
                start "" /B "${env.PYTHON}" app.py
                REM Ждем 2 секунды, чтобы Flask успел стартовать
                timeout /t 2
                REM Запускаем ngrok на порт 5000 и сохраняем публичный URL в файл
                start "" /B "${NGROK_PATH}" http 5000 --log=stdout > ngrok.log
                """
            }
        }

        stage('Show ngrok URL') {
            steps {
                echo 'Getting ngrok public URL...'
                bat """
                REM Берем первый публичный URL из лог-файла ngrok
                for /F "tokens=2 delims= " %%a in ('findstr /R "https://.*.ngrok.io" ngrok.log') do echo Public URL: %%a
                """
            }
        }
    }

    post {
        always {
            echo 'Pipeline finished'
        }
        success {
            echo 'Flask server deployed via ngrok!'
        }
        failure {
            echo 'Pipeline failed!'
        }
    }
}
