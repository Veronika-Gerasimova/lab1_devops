pipeline {
    agent any

    environment {
        VENV = "${WORKSPACE}\\venv"
        PYTHON = "${WORKSPACE}\\venv\\Scripts\\python.exe"
        PIP = "${WORKSPACE}\\venv\\Scripts\\pip.exe"
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'dev', url: 'https://github.com/<username>/flask_students.git'
            }
        }

        stage('Setup Python') {
            steps {
                // Создаем виртуальное окружение
                bat "python -m venv venv"
                // Обновляем pip
                bat "\"${PIP}\" install --upgrade pip"
                // Устанавливаем зависимости
                bat "\"${PIP}\" install -r requirements.txt"
            }
        }

        stage('Run Tests') {
            steps {
                // Запуск тестов через pytest
                bat "\"${PYTHON}\" -m pytest -v"
            }
        }

        stage('Deploy') {
            when {
                branch 'main'  // Деплой только из main
            }
            steps {
                echo 'Deploying Flask app...'
                // Запуск Flask в фоновом режиме через Windows cmd
                bat "start /B \"FlaskApp\" \"${PYTHON}\" app.py"
            }
        }
    }

    post {
        success {
            echo 'Pipeline succeeded!'
        }
        failure {
            echo 'Pipeline failed!'
        }
    }
}
