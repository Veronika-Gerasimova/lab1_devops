pipeline {
    agent any

    environment {
        PYTHON = 'C:/Users/geras/AppData/Local/Programs/Python/Python312/python.exe'
        PROJECT_DIR = 'C:/devops'
        PID_FILE = "${PROJECT_DIR}/flask.pid"
    }

    options {
        skipDefaultCheckout()
    }

    stages {

        stage('Checkout SCM') {
            steps {
                echo 'Cloning repository...'
                git branch: 'main',
                    url: 'https://github.com/Veronika-Gerasimova/lab1_devops.git',
                    credentialsId: 'github-token'
            }
        }

        stage('Install dependencies') {
            steps {
                echo 'Installing Python dependencies...'
                bat "\"${env.PYTHON}\" -m pip install --upgrade pip"
                bat "\"${env.PYTHON}\" -m pip install -r ${PROJECT_DIR}/requirements.txt"
            }
        }

        stage('Run tests') {
            steps {
                echo 'Running pytest...'
                bat "\"${env.PYTHON}\" -m pytest -v ${PROJECT_DIR}"
            }
        }

        stage('Stop old server') {
            steps {
                echo 'Stopping previous Flask server if exists...'
                bat """
                if exist ${PID_FILE} (
                    for /F %%i in (${PID_FILE}) do taskkill /PID %%i /F
                    del ${PID_FILE}
                )
                """
            }
        }

        stage('Deploy Flask App') {
            steps {
                echo 'Starting Flask server...'
                bat """
                cd ${PROJECT_DIR}
                start "" /B "${env.PYTHON}" app.py
                """
            }
        }
    }

    post {
        always {
            echo 'Pipeline finished'
        }
        success {
            echo 'Tests passed and Flask server deployed!'
        }
        failure {
            echo 'Pipeline failed!'
        }
    }
}
